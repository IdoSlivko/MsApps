{"ast":null,"code":"var _jsxFileName = \"/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Definitions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Definitions(_ref) {\n  _s();\n\n  let {\n    definitions\n  } = _ref;\n  const [verbTitle, setVerbTitle] = React.useState(false);\n  const adjTitle = '';\n  const nounTitle = '';\n  const someTitle = '';\n  const verbArray = [];\n  const nounArray = [];\n  const adjArray = [];\n  const someArray = []; // console.log('definitions: ', definitions);\n  // React.useEffect(() => {\n  // \tdefinitions.forEach((item) => {\n  // \t\tif (item.partOfSpeech === 'verb') {\n  // \t\t\tsetVerbTitle('verb');\n  // \t\t\tverbArray.push(item.definition);\n  // \t\t\tconsole.log('verbArray: ', verbArray);\n  // \t\t}\n  // \t\telse if (item.partOfSpeech === 'noun') {\n  // \t\t\tadjArray.push(item.definition);\n  // \t\t}\n  // \t\telse if (item.partOfSpeech === 'null') {\n  // \t\t\tnullArray.push(item.definition);\n  // \t\t}\n  // \t\telse {\n  // \t\t\tsomeArray.push(item.definition);\n  // \t\t}\n  // \t});\n  // }, [definitions]);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"definitions\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"definitions__container\",\n      children: [definitions.map(definition => {\n        if (definition.partOfSpeech === 'verb') {\n          verbArray.push(definition.definition);\n        } else if (definition.partOfSpeech === 'noun') {\n          nounArray.push(definition.definition);\n        } else if (definition.partOfSpeech === 'adjective') {\n          adjArray.push(definition.definition);\n        } else {\n          someArray.push(definition.definition);\n        }\n      }), verbArray.length != 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"verb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 31\n      }, this), verbArray.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"definition__list\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      }), nounArray.length != 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"noun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), nounArray.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"definition__list\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      }), adjArray.length != 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"adjective\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 30\n      }, this), adjArray.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"definition__list\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      }), someArray.length != 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this), someArray.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"definition__list\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Definitions, \"nTMJxhR1Hx7Jy3P74C++dcQVMbA=\");\n\n_c = Definitions;\nexport default Definitions; // const firstLetter = definition.definition.charAt(0).toUpperCase();\n\n{\n  /* <li className=\"definition__list\" key={index}>\n  <h3>{verbTitle}</h3>\n  <i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n  </li> */\n}\n{\n  /* {definitions.map((definition, index) => {\n  { if (definition.partOfSpeech === 'verb') {\n  verbArray.push(definition.definition);\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  else if (definition.partOfSpeech === 'adjective') {\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  else if (definition.partOfSpeech === 'noun') {\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  else {\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  }\n  })} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Definitions\");","map":{"version":3,"sources":["/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js"],"names":["React","Definitions","definitions","verbTitle","setVerbTitle","useState","adjTitle","nounTitle","someTitle","verbArray","nounArray","adjArray","someArray","map","definition","partOfSpeech","push","length","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Definitions.css'\n\nfunction Definitions({ definitions }) {\n\n\tconst [ verbTitle, setVerbTitle ] = React.useState(false);\n\tconst adjTitle = '';\n\tconst nounTitle = '';\n\tconst someTitle = '';\n\n\tconst verbArray =[];\n\tconst nounArray =[];\n\tconst adjArray =[];\n\tconst someArray =[];\n\n\t// console.log('definitions: ', definitions);\n\n\t// React.useEffect(() => {\n\t// \tdefinitions.forEach((item) => {\n\t// \t\tif (item.partOfSpeech === 'verb') {\n\t// \t\t\tsetVerbTitle('verb');\n\t// \t\t\tverbArray.push(item.definition);\n\t// \t\t\tconsole.log('verbArray: ', verbArray);\n\t// \t\t}\n\t// \t\telse if (item.partOfSpeech === 'noun') {\n\t// \t\t\tadjArray.push(item.definition);\n\t// \t\t}\n\t// \t\telse if (item.partOfSpeech === 'null') {\n\t// \t\t\tnullArray.push(item.definition);\n\t// \t\t}\n\t// \t\telse {\n\t// \t\t\tsomeArray.push(item.definition);\n\t// \t\t}\n\t// \t});\n  // }, [definitions]);\n\n\treturn (\n\t\t<section className=\"definitions\">\n\t\t\t<ul className=\"definitions__container\">\n\t\t\t\t{definitions.map((definition) => {\n\n\t\t\t\t\tif (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t\tverbArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t\tnounArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'adjective') {\n\t\t\t\t\t\tadjArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsomeArray.push(definition.definition);\n\t\t\t\t\t}\n\n\t\t\t\t})}\n\t\t\t\n\t\t\t\t{verbArray.length != 0 && <h3>verb</h3>}\n\t\t\t\t{verbArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}>{item}</li>;\n\t\t\t\t})}\n\n\t\t\t\t{nounArray.length != 0 && <h3>noun</h3>}\n\t\t\t\t{nounArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}>{item}</li>;\n\t\t\t\t})}\n\n\t\t\t\t{adjArray.length != 0 && <h3>adjective</h3>}\n\t\t\t\t{adjArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}>{item}</li>;\n\t\t\t\t})}\n\n\t\t\t\t{someArray.length != 0 && <h3>null</h3>}\n\t\t\t\t{someArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}>{item}</li>;\n\t\t\t\t})}\n\n\n\n\n\t\t\t\t{/* return (\n\t\t\t\t\t\t<li className=\"definition__list\" key={index}>{definition.definition}</li>\n\t\t\t\t\t); */}\n\n\t\t\t\t{/* })} */}\n\t\t\t\t{/* {verbArray.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{item}</i></li>\n\t\t\t\t\t);\n\t\t\t\t})} */}\n\t\t\t</ul>\n\t\t</section>\n\t);\n}\n\nexport default Definitions;\n\n\t// const firstLetter = definition.definition.charAt(0).toUpperCase();\n\n\t\t\t\t\t\t{/* <li className=\"definition__list\" key={index}>\n\t\t\t\t\t\t\t<h3>{verbTitle}</h3>\n\t\t\t\t\t\t\t<i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n\t\t\t\t\t\t</li> */}\n\n\t\t\t\t\t\t\t{/* {definitions.map((definition, index) => {\n\t\t\t\t\t{ if (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t\t\tverbArray.push(definition.definition);\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (definition.partOfSpeech === 'adjective') {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})} */}\n"]},"metadata":{},"sourceType":"module"}