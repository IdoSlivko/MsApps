{"ast":null,"code":"var _jsxFileName = \"/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Definitions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Definitions(_ref) {\n  _s();\n\n  let {\n    definitions\n  } = _ref;\n  const [verbTitle, setVerbTitle] = React.useState(false);\n  const adjTitle = '';\n  const nounTitle = '';\n  const someTitle = '';\n  const verbArray = [];\n  const adjArray = [];\n  const nullArray = [];\n  const someArray = [];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"definitions\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"definitions__container\",\n      children: definitions.map((definition, index) => {\n        const firstLetter = definition.definition.charAt(0).toUpperCase(); // if (definition.partOfSpeech === 'verb') {\n        // \tsetVerbTitle('verb');\n        // \tverbArray.push(definition.definition);\n        // }\n        // else if (definition.partOfSpeech === 'noun') {\n        // \tadjArray.push(definition.definition);\n        // }\n        // else if (definition.partOfSpeech === 'null') {\n        // \tnullArray.push(definition.definition);\n        // }\n        // else {\n        // \tsomeArray.push(definition.definition);\n        // }\n\n        return (\n          /*#__PURE__*/\n          // console.log(definition);\n          // <>\n          // \t{ verbTitle && <div>\n          // \t\t<h3>{verbTitle}</h3>\n          // \t</div> }\n          // </>\n          _jsxDEV(\"li\", {\n            className: \"definition__list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: definition.partOfSpeech\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 8\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Definitions, \"nTMJxhR1Hx7Jy3P74C++dcQVMbA=\");\n\n_c = Definitions;\nexport default Definitions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Definitions\");","map":{"version":3,"sources":["/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js"],"names":["React","Definitions","definitions","verbTitle","setVerbTitle","useState","adjTitle","nounTitle","someTitle","verbArray","adjArray","nullArray","someArray","map","definition","index","firstLetter","charAt","toUpperCase","partOfSpeech","slice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,OAAsC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAErC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAApC;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;AAEA,QAAMC,SAAS,GAAE,EAAjB;AACA,QAAMC,QAAQ,GAAE,EAAhB;AACA,QAAMC,SAAS,GAAE,EAAjB;AACA,QAAMC,SAAS,GAAE,EAAjB;AAEA,sBACC;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,2BACC;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA,gBACEV,WAAW,CAACW,GAAZ,CAAgB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACvC,cAAMC,WAAW,GAAGF,UAAU,CAACA,UAAX,CAAsBG,MAAtB,CAA6B,CAA7B,EAAgCC,WAAhC,EAApB,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACC;AACA;AACA;AACA;AACA;AACA;AAEA;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,oCACC;AAAA,wBAAKJ,UAAU,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAA,wBAAIH,WAAW,GAAGF,UAAU,CAACA,UAAX,CAAsBM,KAAtB,CAA4B,CAA5B,CAAd,GAA+C,IAA/C,GAAsDN,UAAU,CAACK,YAAjE,GAAgF;AAApF;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA,aAAsCJ,KAAtC;AAAA;AAAA;AAAA;AAAA;AARD;AAeA,OA/BA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAsCA;;GAlDQd,W;;KAAAA,W;AAoDT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport './Definitions.css'\n\nfunction Definitions({ definitions }) {\n\n\tconst [ verbTitle, setVerbTitle ] = React.useState(false);\n\tconst adjTitle = '';\n\tconst nounTitle = '';\n\tconst someTitle = '';\n\n\tconst verbArray =[];\n\tconst adjArray =[];\n\tconst nullArray =[];\n\tconst someArray =[];\n\n\treturn (\n\t\t<section className=\"definitions\">\n\t\t\t<ul className=\"definitions__container\">\n\t\t\t\t{definitions.map((definition, index) => {\n\t\t\t\t\tconst firstLetter = definition.definition.charAt(0).toUpperCase();\n\t\t\t\t\t// if (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t// \tsetVerbTitle('verb');\n\t\t\t\t\t// \tverbArray.push(definition.definition);\n\t\t\t\t\t// }\n\t\t\t\t\t// else if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t// \tadjArray.push(definition.definition);\n\t\t\t\t\t// }\n\t\t\t\t\t// else if (definition.partOfSpeech === 'null') {\n\t\t\t\t\t// \tnullArray.push(definition.definition);\n\t\t\t\t\t// }\n\t\t\t\t\t// else {\n\t\t\t\t\t// \tsomeArray.push(definition.definition);\n\t\t\t\t\t// }\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t// console.log(definition);\n\t\t\t\t\t\t// <>\n\t\t\t\t\t\t// \t{ verbTitle && <div>\n\t\t\t\t\t\t// \t\t<h3>{verbTitle}</h3>\n\t\t\t\t\t\t// \t</div> }\n\t\t\t\t\t\t// </>\n\n\t\t\t\t\t\t<li className=\"definition__list\" key={index}>\n\t\t\t\t\t\t\t<h3>{definition.partOfSpeech}</h3>\n\t\t\t\t\t\t\t<i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</section>\n\t);\n}\n\nexport default Definitions;\n"]},"metadata":{},"sourceType":"module"}