{"ast":null,"code":"var _jsxFileName = \"/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Definitions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Definitions(_ref) {\n  _s();\n\n  let {\n    definitions\n  } = _ref;\n  const [verbTitle, setVerbTitle] = React.useState(false);\n  const adjTitle = '';\n  const nounTitle = '';\n  const someTitle = '';\n  const verbArray = [];\n  const nounArray = [];\n  const adjArray = [];\n  const adverbArray = [];\n  const someArray = [];\n  const array = [1, 2, 3, 4, 5];\n  const array1 = [7, 1, 6, 3, 2];\n  const array2 = [];\n  const minNum = 1; // console.log('definitions: ', definitions);\n  // React.useEffect(() => {\n  // \tdefinitions.forEach((item) => {\n  // \t\tif (item.partOfSpeech === 'verb') {\n  // \t\t\tsetVerbTitle('verb');\n  // \t\t\tverbArray.push(item.definition);\n  // \t\t\tconsole.log('verbArray: ', verbArray);\n  // \t\t}\n  // \t\telse if (item.partOfSpeech === 'noun') {\n  // \t\t\tadjArray.push(item.definition);\n  // \t\t}\n  // \t\telse if (item.partOfSpeech === 'null') {\n  // \t\t\tnullArray.push(item.definition);\n  // \t\t}\n  // \t\telse {\n  // \t\t\tsomeArray.push(item.definition);\n  // \t\t}\n  // \t});\n  // }, [definitions]);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"definitions\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"definitions__container\",\n      children: definitions.forEach((definition, index) => {\n        let item = definition;\n        return (\n          /*#__PURE__*/\n          // <li className=\"definition__list\" key={index}>{definition.definition}</li>\n          _jsxDEV(\"li\", {\n            className: \"definition__list\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Definitions, \"nTMJxhR1Hx7Jy3P74C++dcQVMbA=\");\n\n_c = Definitions;\nexport default Definitions; // const firstLetter = definition.definition.charAt(0).toUpperCase();\n\n{\n  /* <li className=\"definition__list\" key={index}>\n  <h3>{verbTitle}</h3>\n  <i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n  </li> */\n}\n{\n  /* {definitions.map((definition, index) => {\n  { if (definition.partOfSpeech === 'verb') {\n  verbArray.push(definition.definition);\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  else if (definition.partOfSpeech === 'adjective') {\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  else if (definition.partOfSpeech === 'noun') {\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  else {\n  <li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n  }\n  }\n  })} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Definitions\");","map":{"version":3,"sources":["/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js"],"names":["React","Definitions","definitions","verbTitle","setVerbTitle","useState","adjTitle","nounTitle","someTitle","verbArray","nounArray","adjArray","adverbArray","someArray","array","array1","array2","minNum","forEach","definition","index","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,OAAsC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAErC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAApC;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;AAEA,QAAMC,SAAS,GAAE,EAAjB;AACA,QAAMC,SAAS,GAAE,EAAjB;AACA,QAAMC,QAAQ,GAAE,EAAhB;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,SAAS,GAAE,EAAjB;AAEA,QAAMC,KAAK,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAAd;AACA,QAAMC,MAAM,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,MAAM,GAAG,CAAf,CAjBqC,CAmBrC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AAED,sBACC;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,2BACC;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA,gBAUCf,WAAW,CAACgB,OAAZ,CAAoB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC3C,YAAIC,IAAI,GAAGF,UAAX;AACA;AAAA;AACE;AACA;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,sBAA8CE;AAA9C,aAAsCD,KAAtC;AAAA;AAAA;AAAA;AAAA;AAFF;AAKC,OAPD;AAVD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAgGA;;GAxIQnB,W;;KAAAA,W;AA0IT,eAAeA,WAAf,C,CAEC;;AAEK;AAAC;AACP;AACA;AACA;AAAe;AAER;AAAC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAW","sourcesContent":["import React from 'react';\nimport './Definitions.css'\n\nfunction Definitions({ definitions }) {\n\n\tconst [ verbTitle, setVerbTitle ] = React.useState(false);\n\tconst adjTitle = '';\n\tconst nounTitle = '';\n\tconst someTitle = '';\n\n\tconst verbArray =[];\n\tconst nounArray =[];\n\tconst adjArray =[];\n\tconst adverbArray = [];\n\tconst someArray =[];\n\n\tconst array = [ 1, 2, 3, 4, 5 ];\n\tconst array1 = [ 7, 1, 6, 3, 2 ];\n\tconst array2 = [];\n\n\tconst minNum = 1;\n\n\t// console.log('definitions: ', definitions);\n\n\t// React.useEffect(() => {\n\t// \tdefinitions.forEach((item) => {\n\t// \t\tif (item.partOfSpeech === 'verb') {\n\t// \t\t\tsetVerbTitle('verb');\n\t// \t\t\tverbArray.push(item.definition);\n\t// \t\t\tconsole.log('verbArray: ', verbArray);\n\t// \t\t}\n\t// \t\telse if (item.partOfSpeech === 'noun') {\n\t// \t\t\tadjArray.push(item.definition);\n\t// \t\t}\n\t// \t\telse if (item.partOfSpeech === 'null') {\n\t// \t\t\tnullArray.push(item.definition);\n\t// \t\t}\n\t// \t\telse {\n\t// \t\t\tsomeArray.push(item.definition);\n\t// \t\t}\n\t// \t});\n  // }, [definitions]);\n\n\treturn (\n\t\t<section className=\"definitions\">\n\t\t\t<ul className=\"definitions__container\">\n\n\t\t\t{/* {definitions.map((definition, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"definition__list\" key={index}>{definition.definition}</li>\n\t\t\t\t\t);\n\n\t\t\t\t})} */}\n\n\n\t\t\t{definitions.forEach((definition, index) => {\n\t\t\t\tlet item = definition;\n\t\t\t\treturn (\n\t\t\t\t\t\t// <li className=\"definition__list\" key={index}>{definition.definition}</li>\n\t\t\t\t\t\t<li className=\"definition__list\" key={index}>{item}</li>\n\t\t\t\t\t);\n\n\t\t\t\t})}\n\n\n\n\n\n\n\n\n\t\t\t\n\t\t\t\t{/* {definitions.forEach((definition) => {\n\n\t\t\t\t\tif (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t\tverbArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t\tnounArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'adjective') {\n\t\t\t\t\t\tadjArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'adverb') {\n\t\t\t\t\t\tadverbArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsomeArray.push(definition.definition);\n\t\t\t\t\t}\n\n\t\t\t\t})} */}\n\n\t\t\t\t{/* <h3>forEach</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{array.forEach((item, index) => {\n\t\t\t\t\t\tlet info = item;\n\t\t\t\t\t\treturn <li key={index}>{info}</li>;\n\t\t\t\t\t})}\n\t\t\t\t</ul> */}\n\n\t\t\t\t{/* <h3>map</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{array.map((item, index) => {\n\t\t\t\t\t\treturn <li key={index}>{item}</li>;\n\t\t\t\t\t})}\n\n\t\t\t\t</ul> */}\n\n\n\n\n\t\t\t\t{/* {verbArray.length !== 0 && <h3>verb</h3>}\n\t\t\t\t{verbArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{nounArray.length !== 0 && <h3>noun</h3>}\n\t\t\t\t{nounArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{adjArray.length !== 0 && <h3>adjective</h3>}\n\t\t\t\t{adjArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{adverbArray.length !== 0 && <h3>adverb</h3>}\n\t\t\t\t{adverbArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{someArray.length !== 0 && <h3>description</h3>}\n\t\t\t\t{someArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})} */}\n\n\t\t\t</ul>\n\t\t</section>\n\t);\n}\n\nexport default Definitions;\n\n\t// const firstLetter = definition.definition.charAt(0).toUpperCase();\n\n\t\t\t\t\t\t{/* <li className=\"definition__list\" key={index}>\n\t\t\t\t\t\t\t<h3>{verbTitle}</h3>\n\t\t\t\t\t\t\t<i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n\t\t\t\t\t\t</li> */}\n\n\t\t\t\t\t\t\t{/* {definitions.map((definition, index) => {\n\t\t\t\t\t{ if (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t\t\tverbArray.push(definition.definition);\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (definition.partOfSpeech === 'adjective') {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})} */}\n"]},"metadata":{},"sourceType":"module"}