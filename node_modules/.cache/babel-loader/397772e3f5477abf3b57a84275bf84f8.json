{"ast":null,"code":"var _jsxFileName = \"/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Definitions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Definitions(_ref) {\n  _s();\n\n  let {\n    definitions\n  } = _ref;\n  const [verbTitle, setVerbTitle] = React.useState(false);\n  const adjTitle = '';\n  const nounTitle = '';\n  const someTitle = '';\n  const verbArray = [];\n  const adjArray = [];\n  const nullArray = [];\n  const someArray = [];\n  console.log('definitions: ', definitions);\n  React.useEffect(() => {\n    definitions.forEach(item => {\n      if (item.partOfSpeech === 'verb') {\n        setVerbTitle('verb');\n        verbArray.push(item.definition);\n      }\n    });\n  }, []); // definitions.forEach((item) => {\n  // \tif (item.partOfSpeech === 'verb') {\n  // \t\tsetVerbTitle('verb');\n  // \t\tverbArray.push(item.definition);\n  // \t}\n  // });\n  // if (definition.partOfSpeech === 'verb') {\n  // \tsetVerbTitle('verb');\n  // \tverbArray.push(definition.definition);\n  // }\n  // else if (definition.partOfSpeech === 'noun') {\n  // \tadjArray.push(definition.definition);\n  // }\n  // else if (definition.partOfSpeech === 'null') {\n  // \tnullArray.push(definition.definition);\n  // }\n  // else {\n  // \tsomeArray.push(definition.definition);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"definitions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Definitions, \"qAYurHkPBfxh1VXgFQppJ1DjJGA=\");\n\n_c = Definitions;\nexport default Definitions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Definitions\");","map":{"version":3,"sources":["/Users/temp/Desktop/web_projects/definition/src/components/Definitions/Definitions.js"],"names":["React","Definitions","definitions","verbTitle","setVerbTitle","useState","adjTitle","nounTitle","someTitle","verbArray","adjArray","nullArray","someArray","console","log","useEffect","forEach","item","partOfSpeech","push","definition"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,OAAsC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAErC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAApC;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;AAEA,QAAMC,SAAS,GAAE,EAAjB;AACA,QAAMC,QAAQ,GAAE,EAAhB;AACA,QAAMC,SAAS,GAAE,EAAjB;AACA,QAAMC,SAAS,GAAE,EAAjB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,WAA7B;AAEAF,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACrBb,IAAAA,WAAW,CAACc,OAAZ,CAAqBC,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACC,YAAL,KAAsB,MAA1B,EAAkC;AACjCd,QAAAA,YAAY,CAAC,MAAD,CAAZ;AACAK,QAAAA,SAAS,CAACU,IAAV,CAAeF,IAAI,CAACG,UAApB;AACA;AACD,KALD;AAMC,GAPF,EAOI,EAPJ,EAdqC,CAuBrC;AACA;AACA;AACA;AACA;AACA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAED,sBACC;AAAS,IAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GA3DQnB,W;;KAAAA,W;AA6DT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport './Definitions.css'\n\nfunction Definitions({ definitions }) {\n\n\tconst [ verbTitle, setVerbTitle ] = React.useState(false);\n\tconst adjTitle = '';\n\tconst nounTitle = '';\n\tconst someTitle = '';\n\n\tconst verbArray =[];\n\tconst adjArray =[];\n\tconst nullArray =[];\n\tconst someArray =[];\n\n\tconsole.log('definitions: ', definitions);\n\n\tReact.useEffect(() => {\n\t\tdefinitions.forEach((item) => {\n\t\t\tif (item.partOfSpeech === 'verb') {\n\t\t\t\tsetVerbTitle('verb');\n\t\t\t\tverbArray.push(item.definition);\n\t\t\t}\n\t\t});\n  }, []);\n\n\t// definitions.forEach((item) => {\n\t// \tif (item.partOfSpeech === 'verb') {\n\t// \t\tsetVerbTitle('verb');\n\t// \t\tverbArray.push(item.definition);\n\t// \t}\n\t// });\n\n\t\t// if (definition.partOfSpeech === 'verb') {\n\t\t// \tsetVerbTitle('verb');\n\t\t// \tverbArray.push(definition.definition);\n\t\t// }\n\t\t// else if (definition.partOfSpeech === 'noun') {\n\t\t// \tadjArray.push(definition.definition);\n\t\t// }\n\t\t// else if (definition.partOfSpeech === 'null') {\n\t\t// \tnullArray.push(definition.definition);\n\t\t// }\n\t\t// else {\n\t\t// \tsomeArray.push(definition.definition);\n\t\t// }\n\n\treturn (\n\t\t<section className=\"definitions\">\n\t\t\t{/* <ul className=\"definitions__container\">\n\t\t\t\t{definitions.map((definition, index) => {\n\t\t\t\t\tconst firstLetter = definition.definition.charAt(0).toUpperCase();\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"definition__list\" key={index}>\n\t\t\t\t\t\t\t<h3>{verbTitle}</h3>\n\t\t\t\t\t\t\t<i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul> */}\n\t\t</section>\n\t);\n}\n\nexport default Definitions;\n"]},"metadata":{},"sourceType":"module"}