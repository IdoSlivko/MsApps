[{"/Users/temp/Desktop/web-projects/definition/src/index.js":"1","/Users/temp/Desktop/web-projects/definition/src/reportWebVitals.js":"2","/Users/temp/Desktop/web-projects/definition/src/components/App/App.js":"3","/Users/temp/Desktop/web-projects/definition/src/api/WordsApi.js":"4","/Users/temp/Desktop/web-projects/definition/src/components/Main/Main.js":"5","/Users/temp/Desktop/web-projects/definition/src/components/Header/Header.js":"6","/Users/temp/Desktop/web-projects/definition/src/components/Definitions/Definitions.js":"7"},{"size":515,"mtime":1649102957000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1649076185000,"results":"10","hashOfConfig":"9"},{"size":1839,"mtime":1651611790000,"results":"11","hashOfConfig":"9"},{"size":1654,"mtime":1651611877000,"results":"12","hashOfConfig":"9"},{"size":805,"mtime":1649149993000,"results":"13","hashOfConfig":"9"},{"size":285,"mtime":1651610746000,"results":"14","hashOfConfig":"9"},{"size":5096,"mtime":1651610835000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"65cy7w",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},"/Users/temp/Desktop/web-projects/definition/src/index.js",[],[],"/Users/temp/Desktop/web-projects/definition/src/reportWebVitals.js",[],[],"/Users/temp/Desktop/web-projects/definition/src/components/App/App.js",["40","41","42","43","44"],[],"import React from 'react';\n\nimport './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Definitions from '../Definitions/Definitions';\n\nimport wordsApi from '../../api/WordsApi';\n\nfunction App() {\n\n  // const definitionArray = [];\n  const [ definitions, setDefinitions ] = React.useState([]);\n\n  // function handleSubmit(word) {\n  //   // console.log('word:', word);\n  //   wordsApi.getDefinitions(word)\n  //   .then((res) => {\n  //     console.log('res from api:', res.definitions);\n  //     // console.log('res from api:', res);\n  //     // res.definitions.map(item => {\n  //     //   definitionArray.push(item.definition);\n  //     // })\n  //     // setDefinitions(definitionArray);\n  //     setDefinitions(res.definitions);\n  //   })\n  //   .catch(err => console.error(err));\n  // }\n\n  function handleSubmit(word) {\n    // console.log('word:', word);\n    wordsApi.getDefinitions(word)\n    .then((res) => {\n      console.log('res from api:', res);\n      // console.log('res from api:', res);\n      // res.definitions.map(item => {\n      //   definitionArray.push(item.definition);\n      // })\n      // setDefinitions(definitionArray);\n      // setDefinitions(res.definitions);\n    })\n    .catch(err => console.error(err));\n  }\n\n  return (\n    <div className=\"page\">\n\n      <Header></Header>\n      <Main\n        onSubmit={handleSubmit}\n      ></Main>\n      <Definitions\n        definitions={definitions}\n      ></Definitions>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n{/* <header className=\"App-header\"> */}\n  {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n  {/* <p>\n    Edit <code>src/App.js</code> and save to reload.\n  </p>\n  <a\n    className=\"App-link\"\n    href=\"https://reactjs.org\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Learn React\n  </a> */}\n{/* </header> */}",["45","46"],"/Users/temp/Desktop/web-projects/definition/src/api/WordsApi.js",[],[],"/Users/temp/Desktop/web-projects/definition/src/components/Main/Main.js",[],["47"],"/Users/temp/Desktop/web-projects/definition/src/components/Header/Header.js",[],[],"/Users/temp/Desktop/web-projects/definition/src/components/Definitions/Definitions.js",["48","49","50","51","52","53","54"],[],"import React from 'react';\nimport './Definitions.css'\n\nfunction Definitions({ definitions }) {\n\n\t// \tconst [ verbTitle, setVerbTitle ] = React.useState(false);\n\t// \tconst adjTitle = '';\n\t// \tconst nounTitle = '';\n\t// \tconst someTitle = '';\n\n\t// \tconst verbArray =[];\n\t// \tconst nounArray =[];\n\t// \tconst adjArray =[];\n\t// \tconst adverbArray = [];\n\tconst someArray = [];\n\n\t// \tconst array = [ 1, 2, 3, 4, 5 ];\n\t// \tconst array1 = [ 7, 1, 6, 3, 2 ];\n\t// \tconst array2 = [];\n\n\t// \tconst minNum = 1;\n\n\t// console.log('definitions: ', definitions);\n\n\t// React.useEffect(() => {\n\t// \tdefinitions.forEach((item) => {\n\t// \t\tif (item.partOfSpeech === 'verb') {\n\t// \t\t\tsetVerbTitle('verb');\n\t// \t\t\tverbArray.push(item.definition);\n\t// \t\t\tconsole.log('verbArray: ', verbArray);\n\t// \t\t}\n\t// \t\telse if (item.partOfSpeech === 'noun') {\n\t// \t\t\tadjArray.push(item.definition);\n\t// \t\t}\n\t// \t\telse if (item.partOfSpeech === 'null') {\n\t// \t\t\tnullArray.push(item.definition);\n\t// \t\t}\n\t// \t\telse {\n\t// \t\t\tsomeArray.push(item.definition);\n\t// \t\t}\n\t// \t});\n\t// }, [definitions]);\n\n\t// let stringList = \" 0ver danny A t23ker h1 hel!o duck\";\n\t\n\t// function filter(string) {\n\t// \tconst newArray = string.split(\" \");\n\t// \tnewArray.forEach((word) => {\n\t// \t\tfor (let i = 0; i < word.length; i++) {\n\t// \t\t\tif (isNaN(word.charAt(i))) {\n\t// \t\t\t\tlet word = word.charAt(i);\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t});\n\t// }\n\t// console.log(filter(stringList));\n\n\treturn (\n\t\t<section className=\"definitions\">\n\t\t\t<ul className=\"definitions__container\">\n\n\t\t\t\t{/* {definitions.map((definition, index) => {\n\t\t\t\treturn <li className=\"definition__list\" key={index}>{definition.definition}</li>;\n\t\t\t})} */}\n\n\t\t\t\t{function () {\n\t\t\t\t\tdefinitions.forEach((definition, index) => {\n\t\t\t\t\t\tlet item = definition.definition;\n\t\t\t\t\t\tsomeArray.push(<li className=\"definition__list\" key={index}>{item}</li>)\n\t\t\t\t\t})\n\t\t\t\t}()\n\t\t\t\t}\n\t\t\t\t{someArray}\n\n\t\t\t</ul>\n\t\t</section>\n\t);\n}\n\n\n{/* {for (let i = 0; i < someArray.length; i++) {\n\t\t\t\t<li className=\"definition__list\" key={i}>{someArray[i]}</li>\n\t\t}} */}\n\n\n\n\n\n\n// {\n// \t{definitions.forEach((definition) => {\n// \t\tlet item = definition.definition;\n// \t\tsomeArray.push(item);\n// \t})}\n// \t{console.log('someArray: ', someArray)}\n// \t{someArray.forEach((item, index) => {\n// \t\tlet info = item;\n// \t\tconsole.log('info:', info);\n// \t\treturn <li className=\"definition__list\" key={index}>{info}</li>;\n// \t\t})}\n// \t}\n\n\n\n\n\n\n\n{/* {definitions.forEach((definition) => {\n\n\t\t\t\t\tif (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t\tverbArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t\tnounArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'adjective') {\n\t\t\t\t\t\tadjArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (definition.partOfSpeech === 'adverb') {\n\t\t\t\t\t\tadverbArray.push(definition.definition);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsomeArray.push(definition.definition);\n\t\t\t\t\t}\n\n\t\t\t\t})} */}\n\n{/* <h3>forEach</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{array.forEach((item, index) => {\n\t\t\t\t\t\tlet info = item;\n\t\t\t\t\t\treturn <li key={index}>{info}</li>;\n\t\t\t\t\t})}\n\t\t\t\t</ul> */}\n\n{/* <h3>map</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{array.map((item, index) => {\n\t\t\t\t\t\treturn <li key={index}>{item}</li>;\n\t\t\t\t\t})}\n\n\t\t\t\t</ul> */}\n\n\n\n\n{/* {verbArray.length !== 0 && <h3>verb</h3>}\n\t\t\t\t{verbArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{nounArray.length !== 0 && <h3>noun</h3>}\n\t\t\t\t{nounArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{adjArray.length !== 0 && <h3>adjective</h3>}\n\t\t\t\t{adjArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{adverbArray.length !== 0 && <h3>adverb</h3>}\n\t\t\t\t{adverbArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})}\n\n\t\t\t\t{someArray.length !== 0 && <h3>description</h3>}\n\t\t\t\t{someArray.map((item, index) => {\n\t\t\t\t\treturn <li className=\"definition__list\" key={index}><i>{item}</i></li>;\n\t\t\t\t})} */}\n\n// \t\t\t</ul>\n// \t\t</section>\n// \t);\n// }\n\nexport default Definitions;\n\n// const firstLetter = definition.definition.charAt(0).toUpperCase();\n\n{/* <li className=\"definition__list\" key={index}>\n\t\t\t\t\t\t\t<h3>{verbTitle}</h3>\n\t\t\t\t\t\t\t<i>{firstLetter + definition.definition.slice(1) + ' (' + definition.partOfSpeech + ')'}</i>\n\t\t\t\t\t\t</li> */}\n\n{/* {definitions.map((definition, index) => {\n\t\t\t\t\t{ if (definition.partOfSpeech === 'verb') {\n\t\t\t\t\t\t\tverbArray.push(definition.definition);\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (definition.partOfSpeech === 'adjective') {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (definition.partOfSpeech === 'noun') {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t<li className=\"definition__list\" key={index}><i>{definition.definition}</i></li>\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})} */}\n",{"ruleId":"55","severity":1,"message":"56","line":13,"column":24,"nodeType":"57","messageId":"58","endLine":13,"endColumn":38},{"ruleId":"59","severity":1,"message":"60","line":63,"column":1,"nodeType":"61","messageId":"62","endLine":63,"endColumn":40},{"ruleId":"59","severity":1,"message":"60","line":64,"column":3,"nodeType":"61","messageId":"62","endLine":64,"endColumn":61},{"ruleId":"59","severity":1,"message":"60","line":65,"column":3,"nodeType":"61","messageId":"62","endLine":75,"endColumn":11},{"ruleId":"59","severity":1,"message":"60","line":76,"column":1,"nodeType":"61","messageId":"62","endLine":76,"endColumn":18},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":10,"column":55,"nodeType":"69","messageId":"70","endLine":10,"endColumn":56,"suggestions":"71","suppressions":"72"},{"ruleId":"59","severity":1,"message":"60","line":82,"column":1,"nodeType":"61","messageId":"62","endLine":84,"endColumn":9},{"ruleId":"59","severity":1,"message":"60","line":110,"column":1,"nodeType":"61","messageId":"62","endLine":128,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":130,"column":1,"nodeType":"61","messageId":"62","endLine":136,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":138,"column":1,"nodeType":"61","messageId":"62","endLine":144,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":149,"column":1,"nodeType":"61","messageId":"62","endLine":172,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":183,"column":1,"nodeType":"61","messageId":"62","endLine":186,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":188,"column":1,"nodeType":"61","messageId":"62","endLine":203,"endColumn":12},"no-unused-vars","'setDefinitions' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["75","76"],["77"],"no-global-assign","no-unsafe-negation",{"messageId":"78","fix":"79","desc":"80"},{"messageId":"81","fix":"82","desc":"83"},{"kind":"84","justification":"85"},"removeEscape",{"range":"86","text":"85"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"87","text":"88"},"Replace the `\\` with `\\\\` to include the actual backslash character.","directive","",[240,241],[240,240],"\\"]